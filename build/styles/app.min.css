@import url(https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@700&display=swap);@import url(https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@400,500;600;700&display=swap);@font-face{font-family:'BigJohn';src:url(../fonts/BIGJOHN.otf)}@font-face{font-family:'OpenSans';src:url(../fonts/OpenSans-Regular.ttf)}@font-face{font-family:'SourceSansPro';src:url(../fonts/SourceSansPro-Regular.ttf)}@font-face{font-family:'SourceSansPro';src:url(../fonts/SourceSansPro-Black.ttf)}@font-face{font-family:'SourceSansPro';src:url(../fonts/SourceSansPro-Light.ttf);font-weight:100;font-style:normal}@font-face{font-family:'Roboto';src:url(../fonts/Roboto-Regular.ttf)}@font-face{font-family:'MyriadPro';src:url(../fonts/MyriadPro-Regular.ttf)}*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}:active,:focus{outline:0}body{font-family:'IBM Plex Sans',sans-serif}ul{list-style:none}a{text-decoration:none;color:inherit;-webkit-transition:.2s;transition:.2s}h1,h2,h3,h4,ul{margin:0;padding:0}.container{max-width:1170px;min-width:330px;margin:0 auto;padding:0 15px}.block-title{max-width:330px;padding-bottom:25px;font-size:calc(35px + 13*((100vw - 320px)/1040))}.button{width:calc(100% - 6px);height:76px;background:#312f2f;position:relative;cursor:pointer}@media (max-width:768px){.button{width:70%;min-width:120px;height:50px}}.button__text{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);font-size:16px;color:#fff;letter-spacing:2%}@media (max-width:979px){.button__text{font-size:12px}}@media (max-width:768px){.button__text{font-size:8px}}.button__bg-border{width:100%;height:76px;display:block;border:1px solid #312f2f;position:absolute;top:-6px;left:6px}@media (max-width:768px){.button__bg-border{height:50px}}.red-text{color:#ff3b3d}.header__top{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__logo{font-family:'IBM Plex Mono';font-size:14px;width:85px;height:65px;margin-top:15px}.header__group{font-size:12px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__address{font-size:12px;font-weight:600;padding-right:25px}.header__address span{padding-left:8px}.header__squares{display:-webkit-box;display:-ms-flexbox;display:flex;margin:-20px 0 0}.header__tel{text-align:center;background:#312f2f;color:#fff;width:142px;height:60px;padding:15px 0 0;margin:0 20px 0 0}.header__tel span{font-weight:400}.header__tel a{font-weight:bolder}.header__burger,.header__main{display:-webkit-box;display:-ms-flexbox;display:flex}.header__burger{width:70px;background:#ff3b3d;margin:0;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;cursor:pointer;height:60px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.header__burger span{width:36px;height:4px;display:block;background:#fff;margin:4px 0}.header__main{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;height:550px}.header__left img{padding-top:22px;width:100%;height:auto}.header__bg{position:absolute;left:0;width:48%;height:530px;background:#e8dfe0;z-index:-1}.header__right{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:start;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:50%;font-weight:600;padding-left:15%}.header__title{font-size:48px}.header__title:first-child{padding-bottom:30px}.calc,.calc .form__group{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.calc__form{width:48%}.calc .form__group{width:100%}.calc .form__group:last-child{margin-top:20px}.calc .form__field-name{color:#c4c4c4;font-size:14px;padding-bottom:20px}.calc .form__attach,.calc .form__field{width:47%;display:-webkit-box;display:-ms-flexbox;display:flex}.calc .form__field{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-bottom:20px}.calc .form__field input[type=text]{width:100%;height:67px;border:1px solid #c4c4c4;font-size:30px;padding:.5em .5em 0}.calc .form__attach{height:67px;background:#ff3b3d;margin-top:36px;position:relative}.calc .form__arrow{display:block;background:#0e0a19;width:68px;height:100%;position:relative}.calc .form__arrow svg{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.calc .form__files{color:#fff;text-align:center;margin:auto}.calc .agree{display:-webkit-box;display:-ms-flexbox;display:flex}.calc .agree__text{font-size:12px;padding-left:12px;cursor:pointer;color:#c4c4c4}.calc .paper{background:#ff3b3d;width:45%;height:570px;position:relative;color:#fff;margin-top:60px}.calc .paper__wrap{margin:0 0 55px 55px;position:absolute;bottom:0;left:0}.calc .paper__img{position:absolute;width:100%;top:-70px;left:-120px}.calc .paper__title{font-size:18px;padding-bottom:26px}.calc .paper__subtext{font-size:12px;max-width:230px}.calc .paper__subtext:first-child{padding-bottom:15px}.projects__header{position:relative}@media (max-width:600px){.projects__title{padding-bottom:100px}}.projects__arrows{display:-webkit-box;display:-ms-flexbox;display:flex;position:absolute;bottom:0;right:7px;cursor:pointer}@media (max-width:600px){.projects__arrows{right:80px;bottom:15px}}.projects__arrow{width:85px;height:85px;background:#ff3b3d;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media (max-width:768px){.projects__arrow{width:50px;height:50px}}.prev-arr svg{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.next-arr svg{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}@media (max-width:600px){.slider__item{padding:0 40px}}.slider__image{width:100%;padding:0 7px;margin:0 auto}@media (max-width:600px){.slider__image{width:85%}}.slider__text{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;height:100%;padding:20px 0 0 23px}.slider__title{font-size:24px;color:#0e0a19;width:90%;padding-bottom:10px}.slider__subtext{color:#aa9fa1}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
